{
  
  "1": {
    "title": "Configuration",
    "content": "Configuration . Just the Docs has some specific configuration parameters that can be defined in your Jekyll site’s _config.yml file. . . Site logo | Search | Aux links | Heading anchor links | Footer content | Color scheme | Google Analytics | . View this site’s _config.yml file as an example. . Site logo . # Set a path/url to a logo that will be displayed instead of the title logo: &quot;/assets/images/just-the-docs.png&quot; . Search . # Enable or disable the site search # Supports true (default) or false search_enabled: true # Enable support for hyphenated search words: search_tokenizer_separator: /[ s/]+/ . Aux links . # Aux links for the upper right navigation aux_links: &quot;Just the Docs on GitHub&quot;: - &quot;//github.com/pmarsceill/just-the-docs&quot; . Heading anchor links . # Heading anchor links appear on hover over h1-h6 tags in page content # allowing users to deep link to a particular heading on a page. # # Supports true (default) or false/nil heading_anchors: true . Footer content . # Footer content appears at the bottom of every page&#39;s main content footer_content: &quot;Copyright &amp;copy; 2017-2019 Patrick Marsceill. Distributed by an &lt;a href= &quot;https://github.com/pmarsceill/just-the-docs/tree/master/LICENSE.txt &quot;&gt;MIT license.&lt;/a&gt;&quot; . Color scheme . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . See Customization for more information. . Google Analytics . # Google Analytics Tracking (optional) # e.g, UA-1234567-89 ga_tracking: UA-5555555-55 .",
    "url": "http://localhost:4000/docs/configuration/",
    "relUrl": "/docs/configuration/"
  }
  ,"2": {
    "title": "Customization",
    "content": "Customization . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "http://localhost:4000/docs/customization/",
    "relUrl": "/docs/customization/"
  }
  ,"3": {
    "title": "Markdown kitchen sink",
    "content": "Text can be bold, italic, or strikethrough. . Link to another page. . There should be whitespace between paragraphs. . There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project. . Header 1 . This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. . Header 2 . This is a blockquote following a header. . When something is important enough, you do it even if the odds are not in your favor. . Header 3 . // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } . # Ruby code with syntax highlighting GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, &quot;= #{version}&quot;) end . Header 4 . This is an unordered list following a header. | This is an unordered list following a header. | This is an unordered list following a header. | . Header 5 . This is an ordered list following a header. | This is an ordered list following a header. | This is an ordered list following a header. | Header 6 . head1 head two three . ok | good swedish fish | nice | . out of stock | good and plenty | nice | . ok | good oreos | hmm | . ok | good zoute drop | yumm | . There’s a horizontal rule below this. . . Here is an unordered list: . Item foo | Item bar | Item baz | Item zip | . And an ordered list: . Item one | Item two | Item three | Item four | And a nested list: . level 1 item level 2 item | level 2 item level 3 item | level 3 item | . | . | level 1 item level 2 item | level 2 item | level 2 item | . | level 1 item level 2 item | level 2 item | . | level 1 item | . Nesting an ol in ul in an ol . level 1 item (ul) level 2 item (ol) | level 2 item (ol) level 3 item (ul) | level 3 item (ul) | . | | level 1 item (ul) level 2 item (ol) | level 2 item (ol) level 3 item (ul) | level 3 item (ul) | . | level 4 item (ol) | level 4 item (ol) level 3 item (ul) | level 3 item (ul) | . | | level 1 item (ul) | . And a task list . Hello, this is a TODO item | Hello, this is another TODO item | Goodbye, this item is done | . Small image . . Large image . . Definition lists can be used with HTML syntax. . Name Godzilla Born 1952 Birthplace Japan Color Green Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. . The final element. .",
    "url": "http://localhost:4000/docs/index-test/",
    "relUrl": "/docs/index-test/"
  }
  ,"4": {
    "title": "Home",
    "content": "The nCov-Group Data Repository . AI- and HPC-enabled Generated Leads for SARS-CoV-2 Drugs . This repository provides access to data, models, and code produced by the nCoV Group in support of research aimed at generating leads for potential SARS-CoV-2 drugs. The data include representations and computed descriptors for around 2.8 billion small molecules: some 30 TB of data in all, although many useful subsets are much smaller. . These data will be updated regularly as the collaboration produces new results. Shared data are located on the ALCF Petrel data store at this location, from where they can be retrieved via Globus. To access the data, users can register for a free Globus account (here). . . Data Processing Pipeline | Dataset Catalog | Dataset Downloads | Data Extraction from Literature to Identify Antiviral Molecules | Methodology and Data Formats | Acknowledgements | . Note: . A manuscript describing these data and the associated methodology and processing pipelines is under preparation. A link will be posted here when it is available. . Data Processing Pipeline . The data processing pipeline is used to compute different types of features and representations of billions of small molecules. The pipeline first converts the SMILES representation for each molecule to a canonical SMILES form. (De-duplication is in progress.) It then creates, for each molecule, three different types of features: 1) molecular fingerprints that encode the structure of molecules; 2) molecular descriptors (using Mordred); and 3) 2D images of the molecular structure. These features are being used as input to various machine learning and deep learning models that predict important characteristics including docking scores, toxicity, and more. . . . Dataset Catalog . We have obtained molecule definitions from the following source datasets. For each, we provide a links to the original work and the number of molecules included from the dataset. . Key Description and link # Molecules . BDB | The Binding Database | 1,813,538 | . CAS | CAS COVID-19 Antiviral Candidate Compounds | 49,437 | . DCL | DrugCentral Online Drug Compendium | 3,981 | . DBK | Drugbank | 9,678 | . DUD | DUDE database of useful decoys | 99,782 | . E15 | 15.5M-molecule subset of ENA | 15,547,091 | . EDB | DrugBank plus Enamine Hit Locator Library 2018 | 310,782 | . EMO | eMolecules | 25,946,988 | . ENA | Enamine REAL Database | 1,211,723,723 | . FFI | CureFFI FDA-approved drugs and CNS drugs | 1,497 | . G13 | GDB-13 small organic molecules up to 13 atoms of C, N, O, S and Cl | 977,468,301 | . G17 | GDB-17-Set subset of up to 17 atom extension of GDB-13 | 50,000,000 | . HOP | Harvard Organic Photovoltaic Dataset | 350 | . L1K | L1000 | 10,141 | . MOS | Molecular Sets (MOSES) | 1,936,962 | . PCH | PubChem | 97,545,266 | . QM9 | QM9 subset of GDB-17 | 133,885 | . REP | Repurposing related drug and tool compound annotations | 6,244 | . SAV | Synthetically Accessible Virtual Inventory (SAVI) | 265,047,097 | . SUR | SureChEMBL dataset of molecules from patents | 17,915,384 | . ZIN | ZINC15 | 1,225,804,829 | .   |   | 3,891,374,956 | . Notes: . The key for each dataset may be used in filenames in place of the full name in downloads elsewhere. | The numbers above may be less than what can be found at the source, due to conversion failures and/or version differences. | These numbers do not account for de-duplication, within or between datasets. | . Dataset Downloads . The data are organized in four major directories, containing canonical SMILES, molecular fingerprints, descriptors, and images (png format), respectively. Follow the links below to access subdirectories organized by dataset. . Key Canonical SMILES Fingerprints Descriptors Images . E15 | Link | Link | Link |   | . G13 | Link | Link | Link |   | . G17 | Link | Link | Link |   | . HOP | Link | Link | Link |   | . L1K | Link | Link | Link |   | . MOS | Link | Link | Link |   | . PCH | Link | Link | Link |   | . QM9 | Link | Link | Link |   | . REP | Link | Link | Link |   | . SAV | Link | Link | Link |   | . SUR | Link | Link | Link |   | . ZIN | Link | Link | Link |   | . Data Extraction from Literature to Identify Antiviral Molecules . The data extraction team is working to extract a set of known antiviral molecules that have been previously tested against coronaviruses. This set of molecules will inform future efforts to screen candidates via methods such as simulated docking. There are two efforts current underway, one based on manual extraction and a second, building on the first, to build a named-entity recognition model to enable automatic extraction from a much larger literature corpus. . Manual Extraction of Antivirals from Literature . Coming Soon . Named-Entity Recognition Models for Identification of Antivirals . Coming Soon . Methodology and Data Formats . Converting SMILES Canonical Form . Generating Fingerprints . Calculating Descriptors . Acknowledgements . Data storage and computational support for this research project has been generously supported by the following resources. The data generated have been prepared as part of the nCov-Group Collaboration, a group of over 200 researchers working to use computational techniques to address various challenges associated with COVID-19. . Petrel Data Service at the Argonne Leadership Computing Facility (ALCF) . This research used resources of the Argonne Leadership Computing Facility, which is a DOE Office of Science User Facility supported under Contract DE-AC02-06CH11357. . Petrel . Theta at the Argonne Leadership Computing Facility (ALCF) . This research used resources of the Argonne Leadership Computing Facility, which is a DOE Office of Science User Facility supported under Contract DE-AC02-06CH11357. . ALCF . Frontera at the Texas Advanced Computing Center (TACC) . TACC . Comet at the San Diego Supercomputing Center (SDSC) . SDSC .",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  }
  ,"5": {
    "title": "Home",
    "content": "The Constellation Data Repository . A Data Repository to Share AI- and HPC-enabled Generated for SARS-CoV-2 Drugs . This repository is for sharing data used and models produced to generate leads for potential SARS-CoV-2 drugs. These data will be updated regularly as the collaboration produces new results. Shared data are located on the ALCF Petrel data store (here), from where they can be retrieved via Globus (request access here) . . Data Processing Pipeline | Data Summary Table | Methodology Converting SMILES Canonical Form | Generating Fingerprints | Calculating Descriptors | . | Contributing | Acknowledgements | . Data Processing Pipeline . The data processing pipeline is used to compute different types of features and representations of billions of small molecules. The pipeline first converts the SMILES representation for each molecule to the canonical SMILES form and removes duplicates. It then creates three different types of features: 1) molecular descriptors (using Mordred); 2) molecular fingerprints that encode the structure of molecules; and 3) 2D images of the molecular structure. These features are used as input to various machine learning and deep learning models that predict important characteristics including docking scores, toxicity, and more. . . . Data Summary Table . Dataset (abbrev.) Canonical SMILES Fingerprints Descriptors Images . Drugbank (DBK) | Link | Link | Link | Link | . DUDE (DUD) | Link | Link | Link | Link | . eMolecules (EMO) | Link | Link | Link | Link | . Enamine REAL (ENA) | Link | Link | Link | Link | . Enamine REAL 15.5M subset (E15) | Link | Link | Link | Link | . GDB13 (G13) | Link | Link | Link | Link | . GDB17 (G17) | Link | Link | Link | Link | . E15 | Link | Link | Link | . G13 | Link | Link | Link | . G17 | Link | Link | Link | . HOP | Link | Link | Link | . L1K | Link | Link | Link | . MOS | Link | Link | Link | . PCH | Link | Link | Link | . QM9 | Link | Link | Link | . REP | Link | Link | Link | . SAV | Link | Link | Link | . SUR | Link | Link | Link | . ZIN | Link | Link | Link | . Methodology . Converting SMILES Canonical Form . Generating Fingerprints . Calculating Descriptors . Contributing . Acknowledgements . Data storage and computational support for this research project has been generously supported by the following resources. . Petrel Data Service at the Argonne Leadership Computing Facility (ALCF) . This research used resources of the Argonne Leadership Computing Facility, which is a DOE Office of Science User Facility supported under Contract DE-AC02-06CH11357. Petrel . Theta at the Argonne Leadership Computing Facility (ALCF) . This research used resources of the Argonne Leadership Computing Facility, which is a DOE Office of Science User Facility supported under Contract DE-AC02-06CH11357. ALCF . Frontera at the Texas Advanced Computing Center (TACC) . TACC . Comet at the San Diego Supercomputing Center (SDSC) . SDSC .",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  }
  ,"6": {
    "title": "Navigation Structure",
    "content": "Navigation Structure . . Main navigation | Ordering pages | Excluding pages | Pages with children Child pages | Auto-generating Table of Contents | Children with children | | Auxiliary Navigation | In-page navigation with Table of Contents | . Main navigation . The main navigation for your Just the Docs site is on the left side of the page at large screens and on the top (behind a tap) on small screens. The main navigation can be structured to accommodate a multi-level menu system (pages with children and grandchildren). . By default, all pages will appear as top level pages in the main nav unless a parent page is defined (see Pages with Children). . . Ordering pages . To specify a page order, use the nav_order parameter in your pages’ YAML front matter. . Example . layout: default title: Customization nav_order: 4 . . Excluding pages . For specific pages that you do not wish to include in the main navigation, e.g. a 404 page or a landing page, use the nav_exclude: true parameter in the YAML front matter for that page. . Example . layout: default title: 404 nav_exclude: true . . Pages with children . Sometimes you will want to create a page with many children (a section). First, it is recommended that you keep pages that are related in a directory together… For example, in these docs, we keep all of the written documentation in the ./docs directory and each of the sections in subdirectories like ./docs/ui-components and ./docs/utilities. This gives us an organization like: . +-- .. |-- (Jekyll files) | |-- docs | |-- ui-components | | |-- index.md (parent page) | | |-- buttons.md | | |-- code.md | | |-- labels.md | | |-- tables.md | | +-- typography.md | | | |-- utilities | | |-- index.md (parent page) | | |-- color.md | | |-- layout.md | | |-- responsive-modifiers.md | | +-- typography.md | | | |-- (other md files, pages with no children) | +-- .. | |-- (Jekyll files) +-- .. . On the parent pages, add this YAML front matter parameter: . has_children: true (tells us that this is a parent page) | . Example . layout: default title: UI Components nav_order: 2 has_children: true . Here we’re setting up the UI Components landing page that is available at /docs/ui-components, which has children and is ordered second in the main nav. . Child pages . On child pages, simply set the parent: YAML front matter to whatever the parent’s page title is and set a nav order (this number is now scoped within the section). . Example . layout: default title: Buttons parent: UI Components nav_order: 2 . The Buttons page appears as a child of UI Components and appears second in the UI Components section. . Auto-generating Table of Contents . By default, all pages with children will automatically append a Table of Contents which lists the child pages after the parent page’s content. To disable this auto Table of Contents, set has_toc: false in the parent page’s YAML front matter. . Example . layout: default title: UI Components nav_order: 2 has_children: true has_toc: false . Children with children . Child pages can also have children (grandchildren). This is achieved by using a similar pattern on the child and grandchild pages. . Add the has_children attribute to the child | Add the parent and grand_parent attribute to the grandchild | Example . layout: default title: Buttons parent: UI Components nav_order: 2 has_children: true . layout: default title: Buttons Child Page parent: Buttons grand_parent: UI Components nav_order: 1 . This would create the following navigation structure: . +-- .. | |-- UI Components | |-- .. | | | |-- Buttons | | |-- Button Child Page | | | |-- .. | +-- .. . . Auxiliary Navigation . To add a auxiliary navigation item to your site (in the upper right on all pages), add it to the aux_nav configuration option in your site’s _config.yml file. . Example . # Aux links for the upper right navigation aux_links: &quot;Just the Docs on GitHub&quot;: - &quot;//github.com/pmarsceill/just-the-docs&quot; . . In-page navigation with Table of Contents . To generate a Table of Contents on your docs pages, you can use the {:toc} method from Kramdown, immediately after an &lt;ol&gt; in Markdown. This will automatically generate an ordered list of anchor links to various sections of the page based on headings and heading levels. There may be occasions where you’re using a heading and you don’t want it to show up in the TOC, so to skip a particular heading use the {: .no_toc } CSS class. . Example . # Navigation Structure {: .no_toc } ## {: .no_toc .text-delta } 1. TOC {:toc} . This example skips the page name heading (#) from the TOC, as well as the heading for the Table of Contents itself (##) because it is redundant, followed by the table of contents itself. .",
    "url": "http://localhost:4000/docs/navigation-structure/",
    "relUrl": "/docs/navigation-structure/"
  }
  ,"7": {
    "title": "Search",
    "content": "Search . . Set up search Generate search index | Enable search in configuration | | Hiding pages from search | . Just the Docs uses lunr.js to add a client-side search interface powered by a JSON index that Jekyll generates. All search results are shown in an auto-complete style interface (there is no search results page). By default, all generated HTML pages are indexed using the following data points: . Page title | Page content | Page URL | . Set up search . Generate search index . Before you can use search, you must initialize the feature by running this rake command that comes with just-the-docs: . $ bundle exec just-the-docs rake search:init . This command creates the search-data.json file that Jekyll uses to create your search index. Alternatively, you can create the file manually in the assets/js/ directory of your Jekyll site with this content: . {% raw %} { {% assign comma = false %} {% for page in site.html_pages %}{% if page.search_exclude != true %}{% if comma == true%},{% endif %}&quot;{{ forloop.index0 }}&quot;: { &quot;title&quot;: &quot;{{ page.title | replace: &#39;&amp;amp;&#39;, &#39;&amp;&#39; }}&quot;, &quot;content&quot;: &quot;{{ page.content | markdownify | replace: &#39;&lt;/h&#39;, &#39; . &lt;/h&#39; | replace: &#39;&lt;hr&#39;, &#39; . &lt;hr&#39; | replace: &#39;&lt;/p&#39;, &#39; . &lt;/p&#39; | replace: &#39;&lt;/ul&#39;, &#39; . &lt;/ul&#39; | replace: &#39;&lt;/tr&#39;, &#39; . &lt;/tr&#39; | replace: &#39;&lt;/li&#39;, &#39; | &lt;/li&#39; | replace: &#39;&lt;/td&#39;, &#39; | &lt;/td&#39; | strip_html | escape_once | remove: &#39;&#39; | remove: &#39;&#39; | remove: &#39;&#39; | replace: &#39; &#39;, &#39; &#39; | replace: &#39; . &#39;, &#39; . &#39; | replace: &#39; . &#39;, &#39; . &#39; | normalize_whitespace }}&quot;, &quot;url&quot;: &quot;{{ page.url | absolute_url }}&quot;, &quot;relUrl&quot;: &quot;{{ page.url }}&quot; }{% assign comma = true %} {% endif %}{% endfor %} }{% endraw %} . Note: If you don’t run this rake command or create this file manually, search will not work (or it will use the search index data from this docs site, not your site’s content). . Enable search in configuration . In your site’s _config.yml, enable search: . # Enable or disable the site search search_enabled: true . The default is for hyphens to separate tokens in search terms: gem-based is equivalent to gem based, matching either word. To allow search for hyphenated words: . # Set the search token separator search_tokenizer_separator: /[ s/]+/ . Hiding pages from search . Sometimes you might have a page that you don’t want to be indexed for the search nor to show up in search results, e.g, a 404 page. To exclude a page from search, add the search_exclude: true parameter to the page’s YAML front matter: . Example . layout: default title: Page not found nav_exclude: true search_exclude: true .",
    "url": "http://localhost:4000/docs/search/",
    "relUrl": "/docs/search/"
  }
  
}